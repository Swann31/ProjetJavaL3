/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import gestionnairedemission.Competence;
import gestionnairedemission.CompetenceMission;
import gestionnairedemission.Employe;
import gestionnairedemission.Mission;
import gestionnairedemission.MissionEnPreparation;
import gestionnairedemission.MissionPlanifiee;
import static interfaces.MenuMissionGeneral.refreshTableModel;
import static interfaces.MenuPrincipal.listM;
import java.awt.Component;
import java.io.Console;
import java.util.ArrayList;
import java.util.Date;
import java.util.Properties;
import javafx.scene.control.Alert;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;
import static interfaces.MenuMissionGeneral.model;
import static interfaces.MenuMissionGeneral.table;
import static interfaces.MenuPrincipal.listC;
import static interfaces.MenuPrincipal.listE;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Maxence
 */
public class MenuNouvelleMission extends javax.swing.JFrame {

    private static int nbComp = 0;
    private static ArrayList<Component> competences;
    private static JDatePickerImpl datePickerDebut;
    private static JDatePickerImpl datePickerFin;
    private static Date df;
    /**
     * Creates new form MenuNouvelleMission
     */
    public MenuNouvelleMission() {
        initComponents();
        competences = new ArrayList<Component>();
        implementerDatePicker();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanelSettings = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerMission = new javax.swing.JSpinner();
        jCheckBoxDateFin = new javax.swing.JCheckBox();
        jBtnAnnuler = new javax.swing.JButton();
        jBtnEnregistrer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelCompRech = new javax.swing.JPanel();
        jLabelTitre = new javax.swing.JLabel();
        jButtonAddCompRech = new javax.swing.JButton();
        jButtonRemoveCompRech = new javax.swing.JButton();
        jPanelDescriptif = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDescriptif = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        menuPrincipal = new javax.swing.JMenuBar();
        jMenuPrincipal = new javax.swing.JMenu();
        jMenuPrincpalItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 458));
        setPreferredSize(new java.awt.Dimension(800, 525));

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 36)); // NOI18N
        jLabel1.setText("Nouvelle Mission");

        jLabel2.setText("Num Mission :");

        jLabel4.setText("Date début :");

        jSpinnerMission.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jCheckBoxDateFin.setText("Date de fin");
        jCheckBoxDateFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDateFinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSettingsLayout = new javax.swing.GroupLayout(jPanelSettings);
        jPanelSettings.setLayout(jPanelSettingsLayout);
        jPanelSettingsLayout.setHorizontalGroup(
            jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanelSettingsLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jSpinnerMission, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBoxDateFin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSettingsLayout.setVerticalGroup(
            jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinnerMission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxDateFin)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jBtnAnnuler.setText("Annuler");
        jBtnAnnuler.setMaximumSize(new java.awt.Dimension(120, 36));
        jBtnAnnuler.setMinimumSize(new java.awt.Dimension(120, 36));
        jBtnAnnuler.setPreferredSize(new java.awt.Dimension(120, 36));
        jBtnAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAnnulerActionPerformed(evt);
            }
        });

        jBtnEnregistrer.setText("Enregistrer Mission");
        jBtnEnregistrer.setMaximumSize(new java.awt.Dimension(120, 36));
        jBtnEnregistrer.setMinimumSize(new java.awt.Dimension(120, 36));
        jBtnEnregistrer.setPreferredSize(new java.awt.Dimension(120, 36));
        jBtnEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEnregistrerActionPerformed(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanelCompRech.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabelTitre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelTitre.setText("Compétences recherchées:");

        jButtonAddCompRech.setText("+");
        jButtonAddCompRech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCompRechActionPerformed(evt);
            }
        });

        jButtonRemoveCompRech.setText("-");
        jButtonRemoveCompRech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveCompRechActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCompRechLayout = new javax.swing.GroupLayout(jPanelCompRech);
        jPanelCompRech.setLayout(jPanelCompRechLayout);
        jPanelCompRechLayout.setHorizontalGroup(
            jPanelCompRechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCompRechLayout.createSequentialGroup()
                .addComponent(jLabelTitre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                .addComponent(jButtonAddCompRech)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemoveCompRech)
                .addGap(21, 21, 21))
        );
        jPanelCompRechLayout.setVerticalGroup(
            jPanelCompRechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCompRechLayout.createSequentialGroup()
                .addGroup(jPanelCompRechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCompRechLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonAddCompRech)
                        .addComponent(jButtonRemoveCompRech))
                    .addComponent(jLabelTitre))
                .addGap(0, 309, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanelCompRech);

        jTextAreaDescriptif.setColumns(20);
        jTextAreaDescriptif.setRows(5);
        jScrollPane2.setViewportView(jTextAreaDescriptif);

        jLabel7.setText("Descriptif :");

        javax.swing.GroupLayout jPanelDescriptifLayout = new javax.swing.GroupLayout(jPanelDescriptif);
        jPanelDescriptif.setLayout(jPanelDescriptifLayout);
        jPanelDescriptifLayout.setHorizontalGroup(
            jPanelDescriptifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDescriptifLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDescriptifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                    .addGroup(jPanelDescriptifLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelDescriptifLayout.setVerticalGroup(
            jPanelDescriptifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDescriptifLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenuPrincipal.setText("Application");

        jMenuPrincpalItem1.setText("Fermer");
        jMenuPrincpalItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuPrincpalItem1ActionPerformed(evt);
            }
        });
        jMenuPrincipal.add(jMenuPrincpalItem1);

        menuPrincipal.add(jMenuPrincipal);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelSettings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelDescriptif, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBtnAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnEnregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSettings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDescriptif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnEnregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuPrincpalItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuPrincpalItem1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenuPrincpalItem1ActionPerformed

    private void jBtnAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAnnulerActionPerformed
        // TODO add your handling code here:
        nbComp = 0;
        competences.removeAll(competences);
        this.dispose();
    }//GEN-LAST:event_jBtnAnnulerActionPerformed

    private void jBtnEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEnregistrerActionPerformed
        // TODO add your handling code here:
        Date d = (Date) datePickerDebut.getModel().getValue();
        df = (Date)datePickerFin.getModel().getValue();
        int id = (int) jSpinnerMission.getValue();
        int nb =0;
        int value = 0;
        CompetenceMission[] tabCM = new CompetenceMission[competences.size()/2];
        for(int i = 0; i< competences.size(); i = i+2){
            for(int j = 0; j<listC.size(); j++){
                String str = listC.get(j).getIDC() +" " + listC.get(j).getCat() + " " + listC.get(j).getLib();
                JSpinner jsp = (JSpinner)competences.get(i+1);
                value = (int)jsp.getValue();
                
                JComboBox jcb = (JComboBox)competences.get(i);
                if(str.equals(jcb.getSelectedItem().toString())){
                    CompetenceMission cm = new CompetenceMission(listC.get(j),value);
                    tabCM[i/2]=cm;
                }
            }
            nb+=value;
        }
        if(df != null){
            Employe[] emp = {};
            Mission newMiss = new MissionPlanifiee(id,jTextAreaDescriptif.getText(),d,nb,tabCM,emp,df);
            listM.add(newMiss);
        }else{
            Mission newMiss = new MissionEnPreparation(id,jTextAreaDescriptif.getText(),d,nb,tabCM);
            listM.add(newMiss);
        }
        
        MenuMissionGeneral.sauvegarderMissions();
        model = refreshTableModel();
        table.setModel(model);
        table.repaint();  
        this.dispose();
            
    }//GEN-LAST:event_jBtnEnregistrerActionPerformed

    private void jButtonRemoveCompRechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveCompRechActionPerformed
        // TODO add your handling code here:
        if(nbComp >0){
            Component test = competences.get(competences.size() - 2);
            //showMessageDialog(null,test);
            jPanelCompRech.remove(test);
            jPanelCompRech.remove(test);
            competences.remove(test);
            competences.remove(test);
            this.revalidate();
            this.repaint();
            nbComp -=2;
        }
    }//GEN-LAST:event_jButtonRemoveCompRechActionPerformed

    private void jButtonAddCompRechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCompRechActionPerformed
        // TODO add your handling code here:
        
        if(nbComp ==0){
            //listE.size() à la place de 10
            JSpinner spi = new JSpinner(new SpinnerNumberModel(0,0,10,1));
            JComboBox listComp = new JComboBox(tabCompetence());
            listComp.setBounds(jLabelTitre.getX(), jLabelTitre.getY()+15, 200,30);
            
            jPanelCompRech.add(listComp);
            spi.setBounds(jLabelTitre.getX() + 200,jLabelTitre.getY() +15, 50,30 );
            jPanelCompRech.add(spi);
            competences.add(listComp);
            competences.add(spi);
            this.revalidate();
            this.repaint();
            nbComp += 2;

        }else {
            //pareil ici
            JSpinner spi = new JSpinner(new SpinnerNumberModel(0,0,10,1));
            JComboBox listComp = new JComboBox(tabCompetence());
            listComp.setBounds(jLabelTitre.getX(), jLabelTitre.getY() + 15 + (17*nbComp), 200,30);
            jPanelCompRech.add(listComp);
            spi.setBounds(jLabelTitre.getX() + 200,jLabelTitre.getY()+15+ (17*nbComp), 50,30 );
            jPanelCompRech.add(spi);
            competences.add(listComp);
            competences.add(spi);
            this.revalidate();
            this.repaint();
            nbComp += 2;
        }
    }//GEN-LAST:event_jButtonAddCompRechActionPerformed

    private void jCheckBoxDateFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDateFinActionPerformed
        // TODO add your handling code here:
        if(jCheckBoxDateFin.isSelected()){
            UtilDateModel model = new UtilDateModel();
            model.setDate(20,04,2014);
            Properties p = new Properties();
            p.put("text.today", "Today");
            p.put("text.month", "Month");
            p.put("text.year", "Year");
            JDatePanelImpl datePanel = new JDatePanelImpl(model, p);
            datePickerFin = new JDatePickerImpl(datePanel, new DateLabelFormatter());
            datePickerFin.setBounds(jCheckBoxDateFin.getX(),jCheckBoxDateFin.getY() + 25,120,30);
            jPanelSettings.add(datePickerFin);
            this.revalidate();
            this.repaint();
        }else{
            df = null;
            jPanelSettings.remove(datePickerFin);
            this.revalidate();
            this.repaint();
        }
    }//GEN-LAST:event_jCheckBoxDateFinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuNouvelleMission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuNouvelleMission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuNouvelleMission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuNouvelleMission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuNouvelleMission().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAnnuler;
    private javax.swing.JButton jBtnEnregistrer;
    private javax.swing.JButton jButtonAddCompRech;
    private javax.swing.JButton jButtonRemoveCompRech;
    private javax.swing.JCheckBox jCheckBoxDateFin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelTitre;
    private javax.swing.JMenu jMenuPrincipal;
    private javax.swing.JMenuItem jMenuPrincpalItem1;
    private javax.swing.JPanel jPanelCompRech;
    private javax.swing.JPanel jPanelDescriptif;
    private javax.swing.JPanel jPanelSettings;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerMission;
    private javax.swing.JTextArea jTextAreaDescriptif;
    private javax.swing.JMenuBar menuPrincipal;
    // End of variables declaration//GEN-END:variables

    private void implementerDatePicker() {
        
        UtilDateModel model = new UtilDateModel();
        model.setDate(20,04,2014);
        Properties p = new Properties();
        p.put("text.today", "Today");
        p.put("text.month", "Month");
        p.put("text.year", "Year");
        JDatePanelImpl datePanel = new JDatePanelImpl(model, p);
        datePickerDebut = new JDatePickerImpl(datePanel, new DateLabelFormatter());
        datePickerDebut.setBounds(jLabel4.getX() + 110,jLabel4.getY() - 5,120,30);
        jPanelSettings.add(datePickerDebut);
    }
    
    private String[] tabCompetence(){
        int taille = listC.size();
        String[] tabComp = new String[taille];
        for(int i=0;i<listC.size();i++)
        {
            tabComp[i] =listC.get(i).getIDC() +" " + listC.get(i).getCat() + " " + listC.get(i).getLib() ;
        }

        return tabComp;
    }
}



